#!/usr/bin/env python
"""Convert logical records from the indicated /proc/net file to a CSV file

"""

import sys
import ProcHandlers
    
if sys.platform == "darwin":
    print "MacOS doesn't have a '/proc' filesystem, quitting."
    sys.exit(0)

qualify = ""
seq = 0
sep = "|"
nested = 0
head = ""

DEV_SNMP6 = "dev_snmp6"

if len(sys.argv) > 1:
    target = sys.argv[1]
    if len(sys.argv) > 2:
        qualify = sys.argv[2]
else:
    target = "tcp"

handler = ProcHandlers.GetProcFileHandler(target)

if qualify != "":
    target = '{path}/{file}'.format(path=target, file=qualify)
    active = handler(target)
else:
    if target == DEV_SNMP6:
        active = handler()
    else:
        active = handler(target)

for srec in active:
    prev_head = head
    seq = seq + 1

    if len(active.field) > 0:
        nested = 1
        for key in active.field:
#            print "::dbg.1 key({key}) nested:{nested:d}".format(key=key, nested=nested)
            if type(active.field[key]) != dict:
                nested = 0
        head = sep.join(active.field)
        if head != prev_head:
            if seq > 1:
                print ""
            print "{procfile}{sep}{header}".format(procfile=target, sep=sep, header=head)

        if nested == 1:
            for key in active.field:
                currval = active.field[key]
                out = ""
                for subkey in currval:
                    out = "{out}{sep}{keyval}".format(out=out, sep=sep, keyval=currval[subkey])
                head = sep.join(currval)
                print ""
                print "{seq}{sep}Label{sep}{header}".format(seq=seq, sep=sep, header=head)
                print "{seq}{sep}{label}{datalist}".format(seq=seq, sep=sep, label=key, datalist=out)

        else:
            out = ""
            for key in active.field:
                out = "{out}{sep}{keyval}".format(out=out, sep=sep, keyval=str(active.field[key]))
            print "{seq}{datalist}".format(seq=seq, datalist=out)
