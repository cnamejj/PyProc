#!/usr/bin/env python
"""Convert logical records from the indicated /proc/net file to a CSV file"""

import sys
import ProcHandlers
    
if sys.platform == "darwin":
    print "MacOS doesn't have a '/proc' filesystem, quitting."
    sys.exit(0)

QUALIFY = ""
SEQ = 0
DELIM = "|"
NESTED = 0
HEAD = ""

DEV_SNMP6 = "dev_snmp6"

if len(sys.argv) > 1:
    TARGET = sys.argv[1]
else:
    TARGET = "/proc/net/tcp"

if len(sys.argv) > 2:
    CNAME = sys.argv[2]
else:
    CNAME = TARGET

HANDLER = ProcHandlers.GET_HANDLER(CNAME)
ACTIVE = HANDLER(TARGET)

for srec in ACTIVE:
    prev_head = HEAD
    SEQ += 1

    if len(ACTIVE.field) > 0:
        NESTED = 1
        for key in ACTIVE.field:
            if type(ACTIVE.field[key]) != dict:
                NESTED = 0
        HEAD = DELIM.join(ACTIVE.field)
        if HEAD != prev_head:
            if SEQ > 1:
                print ""
            print "{procfile}{delim}{header}".format(procfile=TARGET,
                    delim=DELIM, header=HEAD)

        if NESTED == 1:
            for key in ACTIVE.field:
                currval = ACTIVE.field[key]
                out = ""
                for subkey in currval:
                    out = "{out}{delim}{keyval}".format(out=out,
                            delim=DELIM, keyval=currval[subkey])
                HEAD = DELIM.join(currval)
                print ""
                print "{seq}{delim}Label{delim}{header}".format(seq=SEQ,
                        delim=DELIM, header=HEAD)
                print "{seq}{delim}{label}{datalist}".format(seq=SEQ,
                        delim=DELIM, label=key, datalist=out)

        else:
            out = ""
            for key in ACTIVE.field:
                out = "{out}{delim}{keyval}".format(out=out, delim=DELIM,
                        keyval=str(ACTIVE.field[key]))
            print "{seq}{datalist}".format(seq=SEQ, datalist=out)
