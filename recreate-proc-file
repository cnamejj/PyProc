#!/bin/bash

TEMPDIR="/var/tmp/pyproc-regentest/"

PREF1="/proc/"
PREF2="/proc/net/"
PREF3="/proc/self/"
PREF4="/proc/sysvipc/"

PROBLEM_FILE1="/proc/self/io"
PROBLEM_FILE2="/proc/$$/io"

# ---

err_exit() \
{
    echo "Err: $*"
    exit 1
}

# ---

typeset -i rc

inp="$1"

if [ "${inp}" = "" ]
then
	echo "Syntax: $0 /proc/file/name"
	exit 0
fi

if [ "$2" = "" ]
then
	cname="${inp}"
else
	cname="$2"
fi

# ---

if [ ! -f "${inp}" ]
then
	if [ -f "${PREF1}${inp}" ]
	then
		inp="${PREF1}${inp}"

	elif [ -f "${PREF2}${inp}" ]
	then
		inp="${PREF2}${inp}"

	elif [ -f "${PREF3}${inp}" ]
	then
		inp="${PREF3}${inp}"

	elif [ -f "${PREF4}${inp}" ]
	then
		inp="${PREF4}${inp}"

	else
		err_exit "Can't find file '${inp}' in common /proc directories"
	fi
fi

if [ ! -r "${inp}" ]
then
	err_exit "Read permission denied for '${inp}'"
fi

# ---

if [ ! -d "${TEMPDIR}" ]
then
	mkdir "${TEMPDIR}"
	rc=$?
	if [ ${rc} -ne 0 ]
	then
		err_exit "Can't create temporary directory '${TEMPDIR}', rc=${rc}"
	fi
fi

inp_base="$(basename "${inp}")"
inpcopy="${TEMPDIR}${inp_base}.copy"
regen="${TEMPDIR}${inp_base}.regen"

chmod 644 "${inpcopy}" >/dev/null 2>&1

if [ "${inp}" = "${PROBLEM_FILE1}" -o  "${inp}" = "${PROBLEM_FILE2}" ]
then
#	echo "**Warning** Trying to copy '${inp}' without getting trailing garbage..."
	inp_data="$(cat "${inp}")"
	rc=$?
	if [ ${rc} -eq 0 ]
	then
		echo "${inp_data}" >"${inpcopy}"
		rc=$?
	fi
else
	cat "${inp}" >"${inpcopy}"
	rc=$?
fi

if [ ${rc} -ne 0 ]
then
	err_exit "Can't copy '${inp}' to '${inpcopy}', rc=${rc}"
fi

# ---

./reproc.py "${inpcopy}" "${cname}" >"${regen}"
rc=$?

if [ ${rc} -ne 0 ]
then
	err_exit "Recreating file '${inp}' failed, rc=${rc}"
fi

# ---

diff -q "${inpcopy}" "${regen}" >/dev/null 2>&1
rc=$?

if [ ${rc} -eq 0 ]
then
	echo "Pass"

	rm "${inpcopy}" "${regen}"
else
	echo "Fail"
fi

# ---

exit ${rc}
