#!/usr/bin/env python
"""Print all the fields for the indicated /proc/net file"""

import sys
import ProcHandlers
    
if sys.platform == "darwin":
    print "MacOS doesn't have a '/proc' filesystem, quitting."
    sys.exit(0)

def show_recs_from_one_file( ioh, proc_file):
    """Display all fields in all lines of the given file."""

    seq = 0

    active = ioh(proc_file)

    for srec in active:
        seq = seq + 1
        if len(active.field) > 0:
            print "- Record {seq} fields {size} hilit {subset}".format(seq=seq,
                    size=len(active.field), subset=len(srec))

            fseq = 0
            for off in active.field:
                fseq = fseq + 1
                currval = active.field[off]
                if type(currval) == dict:
                    print "- - {seq}. {key} ...({size})".format(seq=fseq,
                            key=off, size=len(currval))
                    subseq = 0
                    for subent in currval:
                        subseq = subseq + 1
                        __templ = "- - - {seq}.{subseq}. {subkey} : {subval}"
                        if type(subent) == str:
                            print __templ.format(seq=fseq, subseq=subseq, 
                                    subkey=subent,
                                    subval=str(currval[subent]))
                        else:
                            __skey = str(subent)
                            print __templ.format(seq=fseq, subseq=subseq,
                                    subkey=__skey,
                                    subval=str(currval[subent]))
                else:
                    print "- - {seq}. {key} : {keyval}".format(seq=fseq,
                            key=off, keyval=str(currval))

    return

if len(sys.argv) > 1:
    TARGET = sys.argv[1]
else:
    TARGET = "/proc/net/tcp"

if TARGET == "all":

    for TARGET in ProcHandlers.FILE_HANDLER_REGISTRY:
        print "- Logical records from {file} using {handler}".format(
                file=TARGET,
                handler=str(ProcHandlers.FILE_HANDLER_REGISTRY[TARGET]))

        show_recs_from_one_file(
                ProcHandlers.FILE_HANDLER_REGISTRY[TARGET], TARGET)
        print ""

else:
    HANDLER = ProcHandlers.GET_HANDLER(TARGET)
    NOHANDLER = ProcHandlers.GET_HANDLER("null")

    if HANDLER == NOHANDLER:
        print "- No handler available for file {file}".format(file=TARGET)
    else:
        print "- Logical records from {file} using {handler}".format(
                file=TARGET, handler=str(HANDLER))

        show_recs_from_one_file( HANDLER, TARGET)
