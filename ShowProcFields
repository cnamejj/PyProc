#!/usr/bin/env python
"""Print all the fields for the indicated /proc/net file

"""

import sys
import ProcSysInfo
    
if sys.platform == "darwin":
    print "MacOS doesn't have a '/proc' filesystem, quitting."
    sys.exit(0)

def ShowRecsFromOneFile( handler, target, qualify):

    seq = 0

    if qualify != "":
        active = handler( qualify)
    else:
        active = handler()

    print "- Logical records from {0:s}".format(target)

    for srec in active:
        seq = seq + 1
        if len(active.field) > 0:
            print "- Record {seq} fields {size}".format(seq=seq, size=len(active.field))

            fseq = 0
            for off in active.field:
                fseq = fseq + 1
                currval = active.field[off]
                if type(currval) == dict:
                    subseq = 0
                    print "- - {seq}. {key} ...".format(seq=fseq, key=off)
                    for subent in currval:
                        subseq = subseq + 1
                        if type(subent) == str:
                            print "- - - {seq}.{subseq}. {subkey} : {subkeyval}".format(seq=fseq, subseq=subseq, subkey=subent, subkeyval=str(currval[subent]))
                else:
                    print "- - {seq}. {key} : {keyval}".format(seq=fseq, key=off, keyval=str(currval))

    return

qualify = ""

if len(sys.argv) > 1:
    target = sys.argv[1]
    if len(sys.argv) > 2:
        qualify = sys.argv[2]
else:
    target = "tcp"

if target == "all":

    for target in ProcSysInfo.proc_file_handler_registry:
        ShowRecsFromOneFile( ProcSysInfo.proc_file_handler_registry[target], target, "")
        print ""

else:
    handler = ProcSysInfo.GetProcFileHandler(target)

    ShowRecsFromOneFile( handler, target, qualify)
